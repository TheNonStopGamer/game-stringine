export declare class Vec {
    x: number;
    y: number;
    constructor(x: number, y: number);
    static clone(vec: Vec): Vec;
    sum(): number;
    add(vec: Vec): this;
    addup(num: number): this;
    sub(vec: Vec): this;
    subtract(num: number): this;
    div(vec: Vec): this;
    divide(num: number): this;
    mul(vec: Vec): this;
    multiple(num: number): this;
    pow(power?: Vec): this;
    power(num?: number): this;
    get length(): number;
    get normal(): Vec;
    normalize(): this;
    static add(vec1: Vec, vec2: Vec): Vec;
    static addup(vec1: Vec, num: number): Vec;
    static sub(vec1: Vec, vec2: Vec): Vec;
    static subtract(vec1: Vec, num: number): Vec;
    static div(vec1: Vec, vec2: Vec): Vec;
    static divide(vec1: Vec, num: number): Vec;
    static mul(vec1: Vec, vec2: Vec): Vec;
    static multiple(vec1: Vec, num: number): Vec;
    static pow(vec: Vec, power?: Vec): Vec;
    static power(vec: Vec, num?: number): Vec;
    static distance(vec1: Vec, vec2: Vec): Vec;
    static normal(vec: Vec): Vec;
    static readonly VEC1: Vec;
    static readonly VEC2: Vec;
    static readonly VEC5: Vec;
    static readonly VEC10: Vec;
}
